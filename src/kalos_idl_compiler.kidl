prefix "kalos_module_idl_";

module builtin {
    fn println(s: string) = kalos_idl_compiler_println;
    fn print(s: string) = kalos_idl_compiler_print;

    # Old handles
    handle open;
    handle begin_module;
    handle function_export;
    handle property_export;
    handle end_module;
    handle handle_export;
    handle object_property;
    handle begin_object;
    handle end_object;
}

module module {
    prop(read) name: string = kalos_idl_module_name;
    prop(read) prefix: string = kalos_idl_module_prefix;
    handle begin(module: object);
    handle end;

    object module {
        prop(read) name: string = kalos_idl_obj_module_name;
        prop(read) prefix: string = kalos_idl_obj_module_prefix;
    }
}

module function {
    prop(read) id: number = kalos_idl_function_id;
    prop(read) return_type: string = kalos_idl_function_return_type;
    prop(read) name: string = kalos_idl_export_name;
    prop(read) realname: string = kalos_idl_function_realname;
    prop(read) args: object = kalos_idl_function_args;
    prop(read) arg_count: number = kalos_idl_function_arg_count;
    prop(read) varargs: string = kalos_idl_function_varargs;
    fn arg_type(index: number): string = kalos_idl_function_arg_type;
}

module property {
    prop(read) name: string = kalos_idl_export_name;
    prop(read) read_id: number = kalos_idl_property_read_id;
    prop(read) write_id: number = kalos_idl_property_write_id;
    prop(read) type: string = kalos_idl_property_type;
    prop(read) read_symbol: string = kalos_idl_property_read_symbol;
    prop(read) write_symbol: string = kalos_idl_property_write_symbol;
}

module handles {
    prop(read) name: string = kalos_idl_export_name;
    prop(read) module_index: number = kalos_idl_handle_module_index;
    prop(read) handle_index: number = kalos_idl_handle_index;
    prop(read) args: object = kalos_idl_function_args;
}

module object {
    prop(read) name: string = kalos_idl_export_name;
}
