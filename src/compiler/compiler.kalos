import file;
import kalos;
import sys;

var exe;
var verbose;

fn help() {
    println("""Usage:
  {exe} [-v] compile idl-file source-file compiled-file
  {exe} [-v] run source-file
  {exe} [-v] dump compiled-file
  {exe} [-v] idl idl-source-file idl-file
  {exe} [-v] dispatch idl-source-file c-file
  {exe} [-v] hexify source-file c-file
  {exe} [-v] stringify source-file c-file""");
    sys.exit(1);
}

fn extract_args(args): object {
    # Extract the last path segment
    var segment;
    for segment in split(args[0], "/") {
        exe = segment;
    }
    args = tail(args);
    if len(args) > 0 && args[0] == "-v" {
        verbose = 1;
        args = tail(args);
    }
    return args;
}

fn go_compile(args) {
    if len(args) != 3 {
        help();
    }
    var idl = file.read(file.open(args[0], file.READ));
    var compiled = kalos.compile_idl(idl);
    var i;
    for i in range(0, len(compiled.data)) {
        var c = compiled.data[i];
        print("0x{ord(c):02x},"); # see note about zero-pad in test_string_formatting
    }
    print(compiled.data);
}

fn go_dump(args) {

}

on sys.main(args) {
    args = extract_args(args);
    if len(args) == 0 {
        help();
    }
    if (args[0] == "compile") {
        go_compile(tail(args));
    } else if (args[0] == "dump") {
        go_dump(tail(args));
    } else {
        help();
    }
}
