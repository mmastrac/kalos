/* Generated by kalos_idl_compiler - DO NOT MODIFY */

#define K__pstring kalos_string*
#define K__string  kalos_string
#define K__pnumber kalos_int
#define K__number  kalos_int
#define K__pbool   kalos_int
#define K__bool    kalos_int
#define K__pobject kalos_object_ref*
#define K__object  kalos_object_ref
#define K__pany    kalos_value*
#define K__any     kalos_value

#define K__t_string KALOS_VALUE_STRING
#define K__t_number KALOS_VALUE_NUMBER
#define K__t_bool   KALOS_VALUE_BOOL
#define K__t_object KALOS_VALUE_OBJECT
#define K__t_any    KALOS_VALUE_ANY

#define K__clean_string(stack, x) kalos_string_release((kalos_state*)state, x);
#define K__clean_number(stack, x) ;
#define K__clean_bool  (stack, x) ;
#define K__clean_object(stack, x) kalos_object_release((kalos_state*)state, &x);
#define K__clean_any   (stack, x) kalos_clear((kalos_state*)state, x);
#define K__arg(n, x)     peek(stack, (n)-(x))
#define K__arg_string(x) &((x)->value.string)
#define K__arg_number(x) (x)->value.number
#define K__arg_bool(x)   (x)->value.number
#define K__arg_object(x) &((x)->value.object)
#define K__arg_any(x)    (x)
#define K__match(id, n, s) (param_count == n && strcmp(name, s) == 0)

// id=0000:0001 name=close
void kalos_module_idl_trigger_close(kalos_run_state* state) {
	kalos_trigger(state, kalos_make_address(0x0, 0x1));
}

// id=0000:0002 name=open
void kalos_module_idl_trigger_open(kalos_run_state* state, K__pbool a0) {
	kalos_load_arg_bool(state, 0, a0);
	kalos_trigger(state, kalos_make_address(0x0, 0x2));
}

bool kalos_module_idl_builtin_dynamic_dispatch(kalos_run_state* state, const char* name, int param_count, kalos_stack* stack, bool retval) {
	// id=1 name=println arg_count=1 binding=fn kalos_idl_compiler_println
	if (K__match(/*id=*/1, /*args=*/1, /*name=*/"println")) {
		LOG("Invoke %s", "println");
		const int arg_count = 1;
		kalos_stack_setup_1(state, K__t_string);
		kalos_idl_compiler_println((void*)state, K__arg_string(K__arg(arg_count, 1)));
		kalos_stack_cleanup(state, arg_count);
		return true;
	}

	// id=2 name=print arg_count=1 binding=fn kalos_idl_compiler_print
	if (K__match(/*id=*/2, /*args=*/1, /*name=*/"print")) {
		LOG("Invoke %s", "print");
		const int arg_count = 1;
		kalos_stack_setup_1(state, K__t_string);
		kalos_idl_compiler_print((void*)state, K__arg_string(K__arg(arg_count, 1)));
		kalos_stack_cleanup(state, arg_count);
		return true;
	}

	// id=3 name=log arg_count=1 binding=fn kalos_idl_compiler_log
	if (K__match(/*id=*/3, /*args=*/1, /*name=*/"log")) {
		LOG("Invoke %s", "log");
		const int arg_count = 1;
		kalos_stack_setup_1(state, K__t_string);
		kalos_idl_compiler_log((void*)state, K__arg_string(K__arg(arg_count, 1)));
		kalos_stack_cleanup(state, arg_count);
		return true;
	}

	return false;
}

bool kalos_module_idl_kidl_dynamic_dispatch(kalos_run_state* state, const char* name, int param_count, kalos_stack* stack, bool retval) {
	// id=1 name=walk_modules arg_count=1 binding=fn kalos_idl_walk_modules
	if (K__match(/*id=*/1, /*args=*/1, /*name=*/"walk_modules")) {
		LOG("Invoke %s", "walk_modules");
		const int arg_count = 1;
		kalos_stack_setup_1(state, K__t_any);
		kalos_idl_walk_modules((void*)state, K__arg_any(K__arg(arg_count, 1)));
		kalos_stack_cleanup(state, arg_count);
		return true;
	}

	// id=2 name=prefix binding=fn kalos_idl_module_prefix
	if (K__match(/*id=*/2, /*args=*/0, /*name=*/"prefix")) {
		push_string(stack, kalos_idl_module_prefix((void*)state));
		return true;
	}
	return false;
}

// id=0002:0001 name=begin
void kalos_module_idl_module_trigger_begin(kalos_run_state* state, K__pany a0, K__pobject a1) {
	kalos_load_arg_any(state, 0, a0);
	kalos_load_arg_object(state, 1, a1);
	kalos_trigger(state, kalos_make_address(0x2, 0x1));
}

// id=0002:0002 name=function
void kalos_module_idl_module_trigger_function(kalos_run_state* state, K__pany a0, K__pobject a1) {
	kalos_load_arg_any(state, 0, a0);
	kalos_load_arg_object(state, 1, a1);
	kalos_trigger(state, kalos_make_address(0x2, 0x2));
}

// id=0002:0003 name=handler
void kalos_module_idl_module_trigger_handler(kalos_run_state* state, K__pany a0, K__pobject a1) {
	kalos_load_arg_any(state, 0, a0);
	kalos_load_arg_object(state, 1, a1);
	kalos_trigger(state, kalos_make_address(0x2, 0x3));
}

// id=0002:0004 name=property
void kalos_module_idl_module_trigger_property(kalos_run_state* state, K__pany a0, K__pobject a1) {
	kalos_load_arg_any(state, 0, a0);
	kalos_load_arg_object(state, 1, a1);
	kalos_trigger(state, kalos_make_address(0x2, 0x4));
}

// id=0002:0005 name=object
void kalos_module_idl_module_trigger_object(kalos_run_state* state, K__pany a0, K__pobject a1) {
	kalos_load_arg_any(state, 0, a0);
	kalos_load_arg_object(state, 1, a1);
	kalos_trigger(state, kalos_make_address(0x2, 0x5));
}

//kalos_module_idl_module_object_module_obj_props
bool kalos_module_idl_module_object_module_obj_props_fn(kalos_run_state* state, kalos_object_ref* object, const char* name, int param_count, kalos_stack* stack) {
	// id=2 name=name binding=c IDL_STRING(IDL_OBJECT(kalos_module)->name_index)
	if (K__match(/*id=*/2, /*args=*/0, /*name=*/"name")) {
		push_string(stack, (IDL_STRING(IDL_OBJECT(kalos_module)->name_index)));
		return true;
	}
	return false;
}

kalos_object_dispatch kalos_module_idl_module_object_module_obj_props = {
	.dispatch_name = kalos_module_idl_module_object_module_obj_props_fn
};

//kalos_module_idl_module_object_function_obj_props
bool kalos_module_idl_module_object_function_obj_props_fn(kalos_run_state* state, kalos_object_ref* object, const char* name, int param_count, kalos_stack* stack) {
	// id=2 name=name binding=fn kalos_idl_export_name
	if (K__match(/*id=*/2, /*args=*/0, /*name=*/"name")) {
		push_string(stack, kalos_idl_export_name((void*)state, object));
		return true;
	}
	// id=4 name=overloads binding=fn kalos_idl_function_overloads
	if (K__match(/*id=*/4, /*args=*/0, /*name=*/"overloads")) {
		push_object(stack, kalos_idl_function_overloads((void*)state, object));
		return true;
	}
	return false;
}

kalos_object_dispatch kalos_module_idl_module_object_function_obj_props = {
	.dispatch_name = kalos_module_idl_module_object_function_obj_props_fn
};

//kalos_module_idl_module_object_overload_obj_props
bool kalos_module_idl_module_object_overload_obj_props_fn(kalos_run_state* state, kalos_object_ref* object, const char* name, int param_count, kalos_stack* stack) {
	// id=6 name=return_type binding=fn kalos_idl_overload_return_type
	if (K__match(/*id=*/6, /*args=*/0, /*name=*/"return_type")) {
		push_string(stack, kalos_idl_overload_return_type((void*)state, object));
		return true;
	}
	// id=8 name=args binding=fn kalos_idl_overload_args
	if (K__match(/*id=*/8, /*args=*/0, /*name=*/"args")) {
		push_object(stack, kalos_idl_overload_args((void*)state, object));
		return true;
	}
	// id=10 name=arg_count binding=fn kalos_idl_overload_arg_count
	if (K__match(/*id=*/10, /*args=*/0, /*name=*/"arg_count")) {
		push_number(stack, kalos_idl_overload_arg_count((void*)state, object));
		return true;
	}
	// id=12 name=varargs binding=fn kalos_idl_overload_varargs
	if (K__match(/*id=*/12, /*args=*/0, /*name=*/"varargs")) {
		push_string(stack, kalos_idl_overload_varargs((void*)state, object));
		return true;
	}
	// id=14 name=binding binding=fn kalos_idl_overload_binding
	if (K__match(/*id=*/14, /*args=*/0, /*name=*/"binding")) {
		push_object(stack, kalos_idl_overload_binding((void*)state, object));
		return true;
	}
	return false;
}

kalos_object_dispatch kalos_module_idl_module_object_overload_obj_props = {
	.dispatch_name = kalos_module_idl_module_object_overload_obj_props_fn
};

//kalos_module_idl_module_object_property_obj_props
bool kalos_module_idl_module_object_property_obj_props_fn(kalos_run_state* state, kalos_object_ref* object, const char* name, int param_count, kalos_stack* stack) {
	// id=2 name=name binding=fn kalos_idl_property_name
	if (K__match(/*id=*/2, /*args=*/0, /*name=*/"name")) {
		push_string(stack, kalos_idl_property_name((void*)state, object));
		return true;
	}
	// id=16 name=type binding=fn kalos_idl_property_type
	if (K__match(/*id=*/16, /*args=*/0, /*name=*/"type")) {
		push_string(stack, kalos_idl_property_type((void*)state, object));
		return true;
	}
	// id=18 name=read_binding binding=fn kalos_idl_property_read_binding
	if (K__match(/*id=*/18, /*args=*/0, /*name=*/"read_binding")) {
		push_object(stack, kalos_idl_property_read_binding((void*)state, object));
		return true;
	}
	// id=20 name=write_binding binding=fn kalos_idl_property_write_binding
	if (K__match(/*id=*/20, /*args=*/0, /*name=*/"write_binding")) {
		push_object(stack, kalos_idl_property_write_binding((void*)state, object));
		return true;
	}
	return false;
}

kalos_object_dispatch kalos_module_idl_module_object_property_obj_props = {
	.dispatch_name = kalos_module_idl_module_object_property_obj_props_fn
};

//kalos_module_idl_module_object_handler_obj_props
bool kalos_module_idl_module_object_handler_obj_props_fn(kalos_run_state* state, kalos_object_ref* object, const char* name, int param_count, kalos_stack* stack) {
	// id=2 name=name binding=fn kalos_idl_export_name
	if (K__match(/*id=*/2, /*args=*/0, /*name=*/"name")) {
		push_string(stack, kalos_idl_export_name((void*)state, object));
		return true;
	}
	// id=22 name=module_index binding=fn kalos_idl_handler_module_index
	if (K__match(/*id=*/22, /*args=*/0, /*name=*/"module_index")) {
		push_number(stack, kalos_idl_handler_module_index((void*)state, object));
		return true;
	}
	// id=24 name=handler_index binding=fn kalos_idl_handler_index
	if (K__match(/*id=*/24, /*args=*/0, /*name=*/"handler_index")) {
		push_number(stack, kalos_idl_handler_index((void*)state, object));
		return true;
	}
	// id=8 name=args binding=fn kalos_idl_handler_args
	if (K__match(/*id=*/8, /*args=*/0, /*name=*/"args")) {
		push_object(stack, kalos_idl_handler_args((void*)state, object));
		return true;
	}
	return false;
}

kalos_object_dispatch kalos_module_idl_module_object_handler_obj_props = {
	.dispatch_name = kalos_module_idl_module_object_handler_obj_props_fn
};

//kalos_module_idl_module_object_object_obj_props
bool kalos_module_idl_module_object_object_obj_props_fn(kalos_run_state* state, kalos_object_ref* object, const char* name, int param_count, kalos_stack* stack) {
	// id=2 name=name binding=fn kalos_idl_export_name
	if (K__match(/*id=*/2, /*args=*/0, /*name=*/"name")) {
		push_string(stack, kalos_idl_export_name((void*)state, object));
		return true;
	}
	return false;
}

kalos_object_dispatch kalos_module_idl_module_object_object_obj_props = {
	.dispatch_name = kalos_module_idl_module_object_object_obj_props_fn
};

//kalos_module_idl_module_object_binding_obj_props
bool kalos_module_idl_module_object_binding_obj_props_fn(kalos_run_state* state, kalos_object_ref* object, const char* name, int param_count, kalos_stack* stack) {
	// id=16 name=type binding=fn kalos_idl_binding_type
	if (K__match(/*id=*/16, /*args=*/0, /*name=*/"type")) {
		push_string(stack, kalos_idl_binding_type((void*)state, object));
		return true;
	}
	// id=26 name=value binding=fn kalos_idl_binding_value
	if (K__match(/*id=*/26, /*args=*/0, /*name=*/"value")) {
		push_string(stack, kalos_idl_binding_value((void*)state, object));
		return true;
	}
	// id=28 name=invoke_id binding=c IDL_OBJECT(kalos_binding)->invoke_id
	if (K__match(/*id=*/28, /*args=*/0, /*name=*/"invoke_id")) {
		push_number(stack, (IDL_OBJECT(kalos_binding)->invoke_id));
		return true;
	}
	return false;
}

kalos_object_dispatch kalos_module_idl_module_object_binding_obj_props = {
	.dispatch_name = kalos_module_idl_module_object_binding_obj_props_fn
};

bool kalos_module_idl_module_dynamic_dispatch(kalos_run_state* state, const char* name, int param_count, kalos_stack* stack, bool retval) {
	// id=1 name=walk_exports arg_count=1 binding=fn kalos_idl_walk_exports
	if (K__match(/*id=*/1, /*args=*/1, /*name=*/"walk_exports")) {
		LOG("Invoke %s", "walk_exports");
		const int arg_count = 1;
		kalos_stack_setup_1(state, K__t_any);
		kalos_idl_walk_exports((void*)state, K__arg_any(K__arg(arg_count, 1)));
		kalos_stack_cleanup(state, arg_count);
		return true;
	}

	// id=2 name=walk_object_properties arg_count=2 binding=fn kalos_idl_walk_object_properties
	if (K__match(/*id=*/2, /*args=*/2, /*name=*/"walk_object_properties")) {
		LOG("Invoke %s", "walk_object_properties");
		const int arg_count = 2;
		kalos_stack_setup_2(state, K__t_any, K__t_object);
		kalos_idl_walk_object_properties((void*)state, K__arg_any(K__arg(arg_count, 1)), K__arg_object(K__arg(arg_count, 2)));
		kalos_stack_cleanup(state, arg_count);
		return true;
	}

	return false;
}

bool kalos_module_idl_dynamic_dispatch(kalos_run_state* state, const char* module, const char* name, int param_count, kalos_stack* stack, bool retval) {
	if (strcmp(module, "builtin") == 0) { return kalos_module_idl_builtin_dynamic_dispatch(state, name, param_count, stack, retval); }
	if (strcmp(module, "kidl") == 0) { return kalos_module_idl_kidl_dynamic_dispatch(state, name, param_count, stack, retval); }
	if (strcmp(module, "module") == 0) { return kalos_module_idl_module_dynamic_dispatch(state, name, param_count, stack, retval); }

	LOG("Module %s not found", module);
	return false;
}

#undef K__string
#undef K__number
#undef K__bool
#undef K__object
#undef K__any
